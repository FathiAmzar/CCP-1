#include <iostream>
#include <ctime>

using namespace std;

int getRandomSteps(int min, int max);
void display_track (int position1, int position2,int intposition3, char symbol1, char symbol2,char symbol3);


int main() {
    // Seed the random number generator
    srand(time(0));

    int enterpriseTrack = 0;
    int voyagerTrack = 50;
    int sonicTrack = 0;

    display_track(enterpriseTrack, voyagerTrack, sonicTrack, 'e', 'v','s');

    cout << "Enterprise current track: " << enterpriseTrack << endl;
    cout << "Voyager current track: " << voyagerTrack << endl;
    cout << "Sonic current track: " << sonicTrack << endl;
    cout << "\npress Enter to start the race\n";

    while (true) {
        cin.get(); // Wait for user to press Enter

        // Generate random steps for Enterprise and Voyager
        int enterpriseStep = getRandomSteps(1, 6);
        int voyagerStep = getRandomSteps(2, 5);
        int sonicStep = getRandomSteps(0, 7);

        // Update track positions
        enterpriseTrack += enterpriseStep;
        voyagerTrack += voyagerStep;
        sonicTrack += sonicStep;

        // Display track
        display_track(enterpriseTrack, voyagerTrack, sonicTrack, 'e', 'v', 's');

        // Display current track positions and steps taken
        cout << "Enterprise current track: " << enterpriseTrack << endl;
        cout << "Voyager current track: " << voyagerTrack << endl;
        cout << "Sonic current track: " << sonicTrack << endl;
        cout << "\n";
        cout << "Enterprise step: " << enterpriseStep << endl;
        cout << "Voyager step: " << voyagerStep << endl;
        cout << "Sonic step: " << sonicStep << endl;

        // Check if any racer has reached the finish line
        if (enterpriseTrack >= 50 && voyagerTrack >= 50 && sonicTrack >= 50) {
            cout << "Congrat to all racers!" << endl;
            break;
        } else if (enterpriseTrack >= 50 && voyagerTrack >= 50) {
            cout << "Enterprise & Voyager wins!" << endl;
            break;
        } else if (voyagerTrack >= 50 && sonicTrack >= 50) {
            cout << "Voyager & Sonic wins!" << endl;
            break;
        } else if (enterpriseTrack >= 50 && sonicTrack >= 50) {
            cout << "Enterprise & Sonic wins!" << endl;
            break;
        } else if (enterpriseTrack >= 50) {
            cout << "Enterprise wins!" << endl;
            break;
        } else if (voyagerTrack >= 50) {
            cout << "Voyager wins!" << endl;
            break;
        } else if (sonicTrack >= 50) {
            cout << "Sonic wins!" << endl;
            break;
        }

            else {
            cout << "\npress Enter for the next turn\n";
        }
    }

    return 0;
}


int getRandomSteps(int min, int max) {
    return rand() % (max - min + 1) + min;
}

void display_track(int position1, int position2, int position3, char character1, char character2,char character3)
// this function displays the race track, placing the characters of the racers at the given positions
{
    const int WIDTH = 57;
    const int HEIGHT = 27;

        char track[HEIGHT][WIDTH];

    // initialise all to spaces
    for (int i = 0; i < HEIGHT; i++)
        for (int j = 0; j < WIDTH; j++)
            track[i][j] = ' ';

    // top track
    for (int i = 0; i <= 2; i = i + 2)
    {
        for (int j = 0; j < WIDTH-1; j = j + 4)
        {
            track[i][j] = '+';
            track[i][j+1] = '-';
            track[i][j+2] = '-';
            track[i][j+3] = '-';
        }
        track[i][WIDTH-1] = '+';
    }

    for (int j = 0; j < WIDTH; j = j + 4)
        track[1][j] = '|';

    // left and right tracks - vertical lines
    for (int i = 3; i < HEIGHT-3; i = i + 2)
    {
        track[i][0] = '|';
        track[i][4] = '|';
        track[i][WIDTH-5] = '|';
        track[i][WIDTH-1] = '|';
    }

   // left track - horizontal lines
    for (int i = 4; i < HEIGHT-3; i = i + 2)
    {
        track[i][0] = '+';
        track[i][1] = '-';
        track[i][2] = '-';
        track[i][3] = '-';
        track[i][4] = '+';
   }

   // right track - horizontal lines
    for (int i = 4; i < HEIGHT-3; i = i + 2)
    {
        track[i][WIDTH-5] = '+';
        track[i][WIDTH-4] = '-';
        track[i][WIDTH-3] = '-';
        track[i][WIDTH-2] = '-';
        track[i][WIDTH-1] = '+';
   }

    // bottom track
    for (int i = HEIGHT-3; i<HEIGHT; i = i + 2)
    {
        for (int j=0; j<WIDTH-1; j = j + 4)
        {
            track[i][j] = '+';
            track[i][j+1] = '-';
            track[i][j+2] = '-';
            track[i][j+3] = '-';
        }
        track[i][WIDTH-1] = '+';
    }

    for (int j=0; j<WIDTH; j = j + 4)
        track[HEIGHT-2][j] = '|';
    // racer 1
    if (position1 <= 13 && position1 >= 0)
    {
        int x;
        x=position1*4+1;
         track[25][x] = character1;
        }else if (position1 > 13 && position1 <= 25)
    {
        int x=25-((position1-13)*2);
         track[x][53] = character1;
        }else if (position1 >= 25 && position1 < 38)
     {
        int x=53-(position1-25)*4;
         track[1][x] = character1;
        }else if (position1 >= 38 && position1 < 50)
     {
        int x=(position1-38)*2+1;

         track[x][1] = character1;
        }


    // racer 2
    if (position2 <= 13 && position2 >= 0)
    {
        int x;
        x=position2*4+2;
         track[25][x] = character2;
        }else if (position2 > 13 && position2 <= 25)
    {
        int x=25-((position2-13)*2);
         track[x][54] = character2;
        }else if (position2 >= 25 && position2 < 38)
     {
        int x=54-(position2-25)*4;
         track[1][x] = character2;
        }else if (position2 >= 38 && position2 < 50)
     {
        int x=(position2-38)*2+1;

         track[x][2] = character2;
        }

    // racer 3
    if (position3 <= 13 && position3 >= 0)
    {
        int x;
        x=position3*4+3;
         track[25][x] = character3;
        }else if (position3 > 13 && position3 <= 25)
    {
        int x=25-((position3-13)*2);
         track[x][55] = character3;
        }else if (position3 >= 25 && position3 < 38)
     {
        int x=55-(position3-25)*4;
         track[1][x] = character3;
        }else if (position3 >= 38 && position3 < 50)
     {
        int x=(position3-38)*2+1;

         track[x][3] = character3;
        }



    // display the track
    for (int i=0; i<HEIGHT; i++)
    {
        for (int j=0; j<WIDTH; j++)
            cout << track[i][j];
        cout << endl;
    }
    cout << endl;
}
